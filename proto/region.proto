import "google/protobuf/descriptor.proto";

package geo_base.proto;

extend google.protobuf.EnumValueOptions {
  optional string JSON = 5000;
}

extend google.protobuf.FieldOptions {
  optional string ENUM = 5001;
}

message Location {
  required double lon = 1;
  required double lat = 2;
}

message Polygon {
  required uint64 polygon_id = 1;
  repeated Location locations = 2;

  enum Type {
    TYPE_INNER = 1 [(JSON) = "inner"];
    TYPE_OUTER = 2 [(JSON) = "outer"];
  }

  required Type type = 3;
}

message KeyValue {
  required string key = 1;
  required string value = 2;
}

message Region {
  required uint64 region_id = 1;
  optional uint64 parent_id = 2;
  repeated Polygon polygons = 3;
  repeated KeyValue kvs = 4;
  repeated string blobs = 5;

  enum Option {
    OPTION_ZERO = 0 [(JSON) = "ZERO"];

    BOUNDARY_ADMINISTRATIVE = 1 [(JSON) = "administrative"];
    BOUNDARY_MARITIME = 2 [(JSON) = "maritime"];
    BOUNDARY_POLICAL = 3 [(JSON) = "political"];
    BOUNDARY_VICE_COUNTRY = 4 [(JSON) = "vice_county"];
    BOUNDARY_NATIONAL_PARK = 5 [(JSON) = "national_park"];
    BOUNDARY_NATIONAL = 6 [(JSON) = "national"];
    BOUNDARY_CIVIL = 7 [(JSON) = "civil"];

    PLACE_ALLOTMENTS = 8 [(JSON) = "allotments"];
    PLACE_CITY = 9 [(JSON) = "city"];
    PLACE_CITY_BLOCK = 10 [(JSON) = "city_block"];
    PLACE_COUNTRY = 11 [(JSON) = "country"];
    PLACE_DISTRICT = 12 [(JSON) = "district"];
    PLACE_FARM = 13 [(JSON) = "farm"];
    PLACE_HAMLET = 14 [(JSON) = "hamlet"];
    PLACE_LOCALITY = 15 [(JSON) = "locality"];
    PLACE_MINUCUPALITY = 16 [(JSON) = "municipality"];
    PLACE_NEIGHBOURHOOD = 17 [(JSON) = "neighbourhood"];
    PLACE_PLOT = 18 [(JSON) = "plot"];
    PLACE_PROVINCE = 19 [(JSON) = "province"];
    PLACE_QUARTER = 20 [(JSON) = "quarter"];
    PLACE_REGION = 21 [(JSON) = "region"];
    PLACE_STATE = 22 [(JSON) = "state"];
    PLACE_SUBURB = 23 [(JSON) = "suburb"];
    PLACE_TOWN = 24 [(JSON) = "town"];
    PLACE_VILLAGE = 25 [(JSON) = "village"];
  }

  required uint64 options = 6 [(ENUM) = "Option"];
}
