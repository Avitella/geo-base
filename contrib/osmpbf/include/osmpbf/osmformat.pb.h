// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osmformat.proto

#ifndef PROTOBUF_osmformat_2eproto__INCLUDED
#define PROTOBUF_osmformat_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace osmpbf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_osmformat_2eproto();
void protobuf_AssignDesc_osmformat_2eproto();
void protobuf_ShutdownFile_osmformat_2eproto();

class header_block_t;
class header_bbox_t;
class primitive_block_t;
class primitive_group_t;
class string_table_t;
class info_t;
class dense_info_t;
class change_set_t;
class node_t;
class dense_nodes_t;
class way_t;
class relation_t;

enum relation_t_member_type_t {
  relation_t_member_type_t_NODE = 0,
  relation_t_member_type_t_WAY = 1,
  relation_t_member_type_t_RELATION = 2
};
bool relation_t_member_type_t_IsValid(int value);
const relation_t_member_type_t relation_t_member_type_t_member_type_t_MIN = relation_t_member_type_t_NODE;
const relation_t_member_type_t relation_t_member_type_t_member_type_t_MAX = relation_t_member_type_t_RELATION;
const int relation_t_member_type_t_member_type_t_ARRAYSIZE = relation_t_member_type_t_member_type_t_MAX + 1;

// ===================================================================

class header_block_t : public ::google::protobuf::MessageLite {
 public:
  header_block_t();
  virtual ~header_block_t();

  header_block_t(const header_block_t& from);

  inline header_block_t& operator=(const header_block_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const header_block_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const header_block_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(header_block_t* other);

  // implements Message ----------------------------------------------

  header_block_t* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const header_block_t& from);
  void MergeFrom(const header_block_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .osmpbf.header_bbox_t bbox = 1;
  inline bool has_bbox() const;
  inline void clear_bbox();
  static const int kBboxFieldNumber = 1;
  inline const ::osmpbf::header_bbox_t& bbox() const;
  inline ::osmpbf::header_bbox_t* mutable_bbox();
  inline ::osmpbf::header_bbox_t* release_bbox();
  inline void set_allocated_bbox(::osmpbf::header_bbox_t* bbox);

  // repeated string required_features = 4;
  inline int required_features_size() const;
  inline void clear_required_features();
  static const int kRequiredFeaturesFieldNumber = 4;
  inline const ::std::string& required_features(int index) const;
  inline ::std::string* mutable_required_features(int index);
  inline void set_required_features(int index, const ::std::string& value);
  inline void set_required_features(int index, const char* value);
  inline void set_required_features(int index, const char* value, size_t size);
  inline ::std::string* add_required_features();
  inline void add_required_features(const ::std::string& value);
  inline void add_required_features(const char* value);
  inline void add_required_features(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& required_features() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_required_features();

  // repeated string optional_features = 5;
  inline int optional_features_size() const;
  inline void clear_optional_features();
  static const int kOptionalFeaturesFieldNumber = 5;
  inline const ::std::string& optional_features(int index) const;
  inline ::std::string* mutable_optional_features(int index);
  inline void set_optional_features(int index, const ::std::string& value);
  inline void set_optional_features(int index, const char* value);
  inline void set_optional_features(int index, const char* value, size_t size);
  inline ::std::string* add_optional_features();
  inline void add_optional_features(const ::std::string& value);
  inline void add_optional_features(const char* value);
  inline void add_optional_features(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& optional_features() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_optional_features();

  // optional string writingprogram = 16;
  inline bool has_writingprogram() const;
  inline void clear_writingprogram();
  static const int kWritingprogramFieldNumber = 16;
  inline const ::std::string& writingprogram() const;
  inline void set_writingprogram(const ::std::string& value);
  inline void set_writingprogram(const char* value);
  inline void set_writingprogram(const char* value, size_t size);
  inline ::std::string* mutable_writingprogram();
  inline ::std::string* release_writingprogram();
  inline void set_allocated_writingprogram(::std::string* writingprogram);

  // optional string source = 17;
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 17;
  inline const ::std::string& source() const;
  inline void set_source(const ::std::string& value);
  inline void set_source(const char* value);
  inline void set_source(const char* value, size_t size);
  inline ::std::string* mutable_source();
  inline ::std::string* release_source();
  inline void set_allocated_source(::std::string* source);

  // optional int64 osmosis_replication_timestamp = 32;
  inline bool has_osmosis_replication_timestamp() const;
  inline void clear_osmosis_replication_timestamp();
  static const int kOsmosisReplicationTimestampFieldNumber = 32;
  inline ::google::protobuf::int64 osmosis_replication_timestamp() const;
  inline void set_osmosis_replication_timestamp(::google::protobuf::int64 value);

  // optional int64 osmosis_replication_sequence_number = 33;
  inline bool has_osmosis_replication_sequence_number() const;
  inline void clear_osmosis_replication_sequence_number();
  static const int kOsmosisReplicationSequenceNumberFieldNumber = 33;
  inline ::google::protobuf::int64 osmosis_replication_sequence_number() const;
  inline void set_osmosis_replication_sequence_number(::google::protobuf::int64 value);

  // optional string osmosis_replication_base_url = 34;
  inline bool has_osmosis_replication_base_url() const;
  inline void clear_osmosis_replication_base_url();
  static const int kOsmosisReplicationBaseUrlFieldNumber = 34;
  inline const ::std::string& osmosis_replication_base_url() const;
  inline void set_osmosis_replication_base_url(const ::std::string& value);
  inline void set_osmosis_replication_base_url(const char* value);
  inline void set_osmosis_replication_base_url(const char* value, size_t size);
  inline ::std::string* mutable_osmosis_replication_base_url();
  inline ::std::string* release_osmosis_replication_base_url();
  inline void set_allocated_osmosis_replication_base_url(::std::string* osmosis_replication_base_url);

  // @@protoc_insertion_point(class_scope:osmpbf.header_block_t)
 private:
  inline void set_has_bbox();
  inline void clear_has_bbox();
  inline void set_has_writingprogram();
  inline void clear_has_writingprogram();
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_osmosis_replication_timestamp();
  inline void clear_has_osmosis_replication_timestamp();
  inline void set_has_osmosis_replication_sequence_number();
  inline void clear_has_osmosis_replication_sequence_number();
  inline void set_has_osmosis_replication_base_url();
  inline void clear_has_osmosis_replication_base_url();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::osmpbf::header_bbox_t* bbox_;
  ::google::protobuf::RepeatedPtrField< ::std::string> required_features_;
  ::google::protobuf::RepeatedPtrField< ::std::string> optional_features_;
  ::std::string* writingprogram_;
  ::std::string* source_;
  ::google::protobuf::int64 osmosis_replication_timestamp_;
  ::google::protobuf::int64 osmosis_replication_sequence_number_;
  ::std::string* osmosis_replication_base_url_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_osmformat_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_osmformat_2eproto();
  #endif
  friend void protobuf_AssignDesc_osmformat_2eproto();
  friend void protobuf_ShutdownFile_osmformat_2eproto();

  void InitAsDefaultInstance();
  static header_block_t* default_instance_;
};
// -------------------------------------------------------------------

class header_bbox_t : public ::google::protobuf::MessageLite {
 public:
  header_bbox_t();
  virtual ~header_bbox_t();

  header_bbox_t(const header_bbox_t& from);

  inline header_bbox_t& operator=(const header_bbox_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const header_bbox_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const header_bbox_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(header_bbox_t* other);

  // implements Message ----------------------------------------------

  header_bbox_t* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const header_bbox_t& from);
  void MergeFrom(const header_bbox_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 left = 1;
  inline bool has_left() const;
  inline void clear_left();
  static const int kLeftFieldNumber = 1;
  inline ::google::protobuf::int64 left() const;
  inline void set_left(::google::protobuf::int64 value);

  // required sint64 right = 2;
  inline bool has_right() const;
  inline void clear_right();
  static const int kRightFieldNumber = 2;
  inline ::google::protobuf::int64 right() const;
  inline void set_right(::google::protobuf::int64 value);

  // required sint64 top = 3;
  inline bool has_top() const;
  inline void clear_top();
  static const int kTopFieldNumber = 3;
  inline ::google::protobuf::int64 top() const;
  inline void set_top(::google::protobuf::int64 value);

  // required sint64 bottom = 4;
  inline bool has_bottom() const;
  inline void clear_bottom();
  static const int kBottomFieldNumber = 4;
  inline ::google::protobuf::int64 bottom() const;
  inline void set_bottom(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:osmpbf.header_bbox_t)
 private:
  inline void set_has_left();
  inline void clear_has_left();
  inline void set_has_right();
  inline void clear_has_right();
  inline void set_has_top();
  inline void clear_has_top();
  inline void set_has_bottom();
  inline void clear_has_bottom();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 left_;
  ::google::protobuf::int64 right_;
  ::google::protobuf::int64 top_;
  ::google::protobuf::int64 bottom_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_osmformat_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_osmformat_2eproto();
  #endif
  friend void protobuf_AssignDesc_osmformat_2eproto();
  friend void protobuf_ShutdownFile_osmformat_2eproto();

  void InitAsDefaultInstance();
  static header_bbox_t* default_instance_;
};
// -------------------------------------------------------------------

class primitive_block_t : public ::google::protobuf::MessageLite {
 public:
  primitive_block_t();
  virtual ~primitive_block_t();

  primitive_block_t(const primitive_block_t& from);

  inline primitive_block_t& operator=(const primitive_block_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const primitive_block_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const primitive_block_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(primitive_block_t* other);

  // implements Message ----------------------------------------------

  primitive_block_t* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const primitive_block_t& from);
  void MergeFrom(const primitive_block_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .osmpbf.string_table_t string_table = 1;
  inline bool has_string_table() const;
  inline void clear_string_table();
  static const int kStringTableFieldNumber = 1;
  inline const ::osmpbf::string_table_t& string_table() const;
  inline ::osmpbf::string_table_t* mutable_string_table();
  inline ::osmpbf::string_table_t* release_string_table();
  inline void set_allocated_string_table(::osmpbf::string_table_t* string_table);

  // repeated .osmpbf.primitive_group_t primitive_group = 2;
  inline int primitive_group_size() const;
  inline void clear_primitive_group();
  static const int kPrimitiveGroupFieldNumber = 2;
  inline const ::osmpbf::primitive_group_t& primitive_group(int index) const;
  inline ::osmpbf::primitive_group_t* mutable_primitive_group(int index);
  inline ::osmpbf::primitive_group_t* add_primitive_group();
  inline const ::google::protobuf::RepeatedPtrField< ::osmpbf::primitive_group_t >&
      primitive_group() const;
  inline ::google::protobuf::RepeatedPtrField< ::osmpbf::primitive_group_t >*
      mutable_primitive_group();

  // optional int32 granularity = 17 [default = 100];
  inline bool has_granularity() const;
  inline void clear_granularity();
  static const int kGranularityFieldNumber = 17;
  inline ::google::protobuf::int32 granularity() const;
  inline void set_granularity(::google::protobuf::int32 value);

  // optional int64 lat_offset = 19 [default = 0];
  inline bool has_lat_offset() const;
  inline void clear_lat_offset();
  static const int kLatOffsetFieldNumber = 19;
  inline ::google::protobuf::int64 lat_offset() const;
  inline void set_lat_offset(::google::protobuf::int64 value);

  // optional int64 lon_offset = 20 [default = 0];
  inline bool has_lon_offset() const;
  inline void clear_lon_offset();
  static const int kLonOffsetFieldNumber = 20;
  inline ::google::protobuf::int64 lon_offset() const;
  inline void set_lon_offset(::google::protobuf::int64 value);

  // optional int32 date_granularity = 18 [default = 1000];
  inline bool has_date_granularity() const;
  inline void clear_date_granularity();
  static const int kDateGranularityFieldNumber = 18;
  inline ::google::protobuf::int32 date_granularity() const;
  inline void set_date_granularity(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:osmpbf.primitive_block_t)
 private:
  inline void set_has_string_table();
  inline void clear_has_string_table();
  inline void set_has_granularity();
  inline void clear_has_granularity();
  inline void set_has_lat_offset();
  inline void clear_has_lat_offset();
  inline void set_has_lon_offset();
  inline void clear_has_lon_offset();
  inline void set_has_date_granularity();
  inline void clear_has_date_granularity();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::osmpbf::string_table_t* string_table_;
  ::google::protobuf::RepeatedPtrField< ::osmpbf::primitive_group_t > primitive_group_;
  ::google::protobuf::int64 lat_offset_;
  ::google::protobuf::int32 granularity_;
  ::google::protobuf::int32 date_granularity_;
  ::google::protobuf::int64 lon_offset_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_osmformat_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_osmformat_2eproto();
  #endif
  friend void protobuf_AssignDesc_osmformat_2eproto();
  friend void protobuf_ShutdownFile_osmformat_2eproto();

  void InitAsDefaultInstance();
  static primitive_block_t* default_instance_;
};
// -------------------------------------------------------------------

class primitive_group_t : public ::google::protobuf::MessageLite {
 public:
  primitive_group_t();
  virtual ~primitive_group_t();

  primitive_group_t(const primitive_group_t& from);

  inline primitive_group_t& operator=(const primitive_group_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const primitive_group_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const primitive_group_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(primitive_group_t* other);

  // implements Message ----------------------------------------------

  primitive_group_t* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const primitive_group_t& from);
  void MergeFrom(const primitive_group_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .osmpbf.node_t nodes = 1;
  inline int nodes_size() const;
  inline void clear_nodes();
  static const int kNodesFieldNumber = 1;
  inline const ::osmpbf::node_t& nodes(int index) const;
  inline ::osmpbf::node_t* mutable_nodes(int index);
  inline ::osmpbf::node_t* add_nodes();
  inline const ::google::protobuf::RepeatedPtrField< ::osmpbf::node_t >&
      nodes() const;
  inline ::google::protobuf::RepeatedPtrField< ::osmpbf::node_t >*
      mutable_nodes();

  // optional .osmpbf.dense_nodes_t dense = 2;
  inline bool has_dense() const;
  inline void clear_dense();
  static const int kDenseFieldNumber = 2;
  inline const ::osmpbf::dense_nodes_t& dense() const;
  inline ::osmpbf::dense_nodes_t* mutable_dense();
  inline ::osmpbf::dense_nodes_t* release_dense();
  inline void set_allocated_dense(::osmpbf::dense_nodes_t* dense);

  // repeated .osmpbf.way_t ways = 3;
  inline int ways_size() const;
  inline void clear_ways();
  static const int kWaysFieldNumber = 3;
  inline const ::osmpbf::way_t& ways(int index) const;
  inline ::osmpbf::way_t* mutable_ways(int index);
  inline ::osmpbf::way_t* add_ways();
  inline const ::google::protobuf::RepeatedPtrField< ::osmpbf::way_t >&
      ways() const;
  inline ::google::protobuf::RepeatedPtrField< ::osmpbf::way_t >*
      mutable_ways();

  // repeated .osmpbf.relation_t relations = 4;
  inline int relations_size() const;
  inline void clear_relations();
  static const int kRelationsFieldNumber = 4;
  inline const ::osmpbf::relation_t& relations(int index) const;
  inline ::osmpbf::relation_t* mutable_relations(int index);
  inline ::osmpbf::relation_t* add_relations();
  inline const ::google::protobuf::RepeatedPtrField< ::osmpbf::relation_t >&
      relations() const;
  inline ::google::protobuf::RepeatedPtrField< ::osmpbf::relation_t >*
      mutable_relations();

  // repeated .osmpbf.change_set_t changesets = 5;
  inline int changesets_size() const;
  inline void clear_changesets();
  static const int kChangesetsFieldNumber = 5;
  inline const ::osmpbf::change_set_t& changesets(int index) const;
  inline ::osmpbf::change_set_t* mutable_changesets(int index);
  inline ::osmpbf::change_set_t* add_changesets();
  inline const ::google::protobuf::RepeatedPtrField< ::osmpbf::change_set_t >&
      changesets() const;
  inline ::google::protobuf::RepeatedPtrField< ::osmpbf::change_set_t >*
      mutable_changesets();

  // @@protoc_insertion_point(class_scope:osmpbf.primitive_group_t)
 private:
  inline void set_has_dense();
  inline void clear_has_dense();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::osmpbf::node_t > nodes_;
  ::osmpbf::dense_nodes_t* dense_;
  ::google::protobuf::RepeatedPtrField< ::osmpbf::way_t > ways_;
  ::google::protobuf::RepeatedPtrField< ::osmpbf::relation_t > relations_;
  ::google::protobuf::RepeatedPtrField< ::osmpbf::change_set_t > changesets_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_osmformat_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_osmformat_2eproto();
  #endif
  friend void protobuf_AssignDesc_osmformat_2eproto();
  friend void protobuf_ShutdownFile_osmformat_2eproto();

  void InitAsDefaultInstance();
  static primitive_group_t* default_instance_;
};
// -------------------------------------------------------------------

class string_table_t : public ::google::protobuf::MessageLite {
 public:
  string_table_t();
  virtual ~string_table_t();

  string_table_t(const string_table_t& from);

  inline string_table_t& operator=(const string_table_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const string_table_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const string_table_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(string_table_t* other);

  // implements Message ----------------------------------------------

  string_table_t* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const string_table_t& from);
  void MergeFrom(const string_table_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes s = 1;
  inline int s_size() const;
  inline void clear_s();
  static const int kSFieldNumber = 1;
  inline const ::std::string& s(int index) const;
  inline ::std::string* mutable_s(int index);
  inline void set_s(int index, const ::std::string& value);
  inline void set_s(int index, const char* value);
  inline void set_s(int index, const void* value, size_t size);
  inline ::std::string* add_s();
  inline void add_s(const ::std::string& value);
  inline void add_s(const char* value);
  inline void add_s(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& s() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_s();

  // @@protoc_insertion_point(class_scope:osmpbf.string_table_t)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> s_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_osmformat_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_osmformat_2eproto();
  #endif
  friend void protobuf_AssignDesc_osmformat_2eproto();
  friend void protobuf_ShutdownFile_osmformat_2eproto();

  void InitAsDefaultInstance();
  static string_table_t* default_instance_;
};
// -------------------------------------------------------------------

class info_t : public ::google::protobuf::MessageLite {
 public:
  info_t();
  virtual ~info_t();

  info_t(const info_t& from);

  inline info_t& operator=(const info_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const info_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const info_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(info_t* other);

  // implements Message ----------------------------------------------

  info_t* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const info_t& from);
  void MergeFrom(const info_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 version = 1 [default = -1];
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::int32 version() const;
  inline void set_version(::google::protobuf::int32 value);

  // optional int64 timestamp = 2;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  inline ::google::protobuf::int64 timestamp() const;
  inline void set_timestamp(::google::protobuf::int64 value);

  // optional int64 changeset = 3;
  inline bool has_changeset() const;
  inline void clear_changeset();
  static const int kChangesetFieldNumber = 3;
  inline ::google::protobuf::int64 changeset() const;
  inline void set_changeset(::google::protobuf::int64 value);

  // optional int32 uid = 4;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 4;
  inline ::google::protobuf::int32 uid() const;
  inline void set_uid(::google::protobuf::int32 value);

  // optional uint32 user_sid = 5;
  inline bool has_user_sid() const;
  inline void clear_user_sid();
  static const int kUserSidFieldNumber = 5;
  inline ::google::protobuf::uint32 user_sid() const;
  inline void set_user_sid(::google::protobuf::uint32 value);

  // optional bool visible = 6;
  inline bool has_visible() const;
  inline void clear_visible();
  static const int kVisibleFieldNumber = 6;
  inline bool visible() const;
  inline void set_visible(bool value);

  // @@protoc_insertion_point(class_scope:osmpbf.info_t)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_changeset();
  inline void clear_has_changeset();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_user_sid();
  inline void clear_has_user_sid();
  inline void set_has_visible();
  inline void clear_has_visible();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int32 version_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int64 changeset_;
  ::google::protobuf::uint32 user_sid_;
  bool visible_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_osmformat_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_osmformat_2eproto();
  #endif
  friend void protobuf_AssignDesc_osmformat_2eproto();
  friend void protobuf_ShutdownFile_osmformat_2eproto();

  void InitAsDefaultInstance();
  static info_t* default_instance_;
};
// -------------------------------------------------------------------

class dense_info_t : public ::google::protobuf::MessageLite {
 public:
  dense_info_t();
  virtual ~dense_info_t();

  dense_info_t(const dense_info_t& from);

  inline dense_info_t& operator=(const dense_info_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const dense_info_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const dense_info_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(dense_info_t* other);

  // implements Message ----------------------------------------------

  dense_info_t* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const dense_info_t& from);
  void MergeFrom(const dense_info_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 version = 1 [packed = true];
  inline int version_size() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::int32 version(int index) const;
  inline void set_version(int index, ::google::protobuf::int32 value);
  inline void add_version(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      version() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_version();

  // repeated sint64 timestamp = 2 [packed = true];
  inline int timestamp_size() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  inline ::google::protobuf::int64 timestamp(int index) const;
  inline void set_timestamp(int index, ::google::protobuf::int64 value);
  inline void add_timestamp(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      timestamp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_timestamp();

  // repeated sint64 changeset = 3 [packed = true];
  inline int changeset_size() const;
  inline void clear_changeset();
  static const int kChangesetFieldNumber = 3;
  inline ::google::protobuf::int64 changeset(int index) const;
  inline void set_changeset(int index, ::google::protobuf::int64 value);
  inline void add_changeset(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      changeset() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_changeset();

  // repeated sint32 uid = 4 [packed = true];
  inline int uid_size() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 4;
  inline ::google::protobuf::int32 uid(int index) const;
  inline void set_uid(int index, ::google::protobuf::int32 value);
  inline void add_uid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      uid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_uid();

  // repeated sint32 user_sid = 5 [packed = true];
  inline int user_sid_size() const;
  inline void clear_user_sid();
  static const int kUserSidFieldNumber = 5;
  inline ::google::protobuf::int32 user_sid(int index) const;
  inline void set_user_sid(int index, ::google::protobuf::int32 value);
  inline void add_user_sid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      user_sid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_user_sid();

  // repeated bool visible = 6 [packed = true];
  inline int visible_size() const;
  inline void clear_visible();
  static const int kVisibleFieldNumber = 6;
  inline bool visible(int index) const;
  inline void set_visible(int index, bool value);
  inline void add_visible(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      visible() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_visible();

  // @@protoc_insertion_point(class_scope:osmpbf.dense_info_t)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > version_;
  mutable int _version_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > timestamp_;
  mutable int _timestamp_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > changeset_;
  mutable int _changeset_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > uid_;
  mutable int _uid_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > user_sid_;
  mutable int _user_sid_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > visible_;
  mutable int _visible_cached_byte_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_osmformat_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_osmformat_2eproto();
  #endif
  friend void protobuf_AssignDesc_osmformat_2eproto();
  friend void protobuf_ShutdownFile_osmformat_2eproto();

  void InitAsDefaultInstance();
  static dense_info_t* default_instance_;
};
// -------------------------------------------------------------------

class change_set_t : public ::google::protobuf::MessageLite {
 public:
  change_set_t();
  virtual ~change_set_t();

  change_set_t(const change_set_t& from);

  inline change_set_t& operator=(const change_set_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const change_set_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const change_set_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(change_set_t* other);

  // implements Message ----------------------------------------------

  change_set_t* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const change_set_t& from);
  void MergeFrom(const change_set_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:osmpbf.change_set_t)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_osmformat_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_osmformat_2eproto();
  #endif
  friend void protobuf_AssignDesc_osmformat_2eproto();
  friend void protobuf_ShutdownFile_osmformat_2eproto();

  void InitAsDefaultInstance();
  static change_set_t* default_instance_;
};
// -------------------------------------------------------------------

class node_t : public ::google::protobuf::MessageLite {
 public:
  node_t();
  virtual ~node_t();

  node_t(const node_t& from);

  inline node_t& operator=(const node_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const node_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const node_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(node_t* other);

  // implements Message ----------------------------------------------

  node_t* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const node_t& from);
  void MergeFrom(const node_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // repeated uint32 keys = 2 [packed = true];
  inline int keys_size() const;
  inline void clear_keys();
  static const int kKeysFieldNumber = 2;
  inline ::google::protobuf::uint32 keys(int index) const;
  inline void set_keys(int index, ::google::protobuf::uint32 value);
  inline void add_keys(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      keys() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_keys();

  // repeated uint32 vals = 3 [packed = true];
  inline int vals_size() const;
  inline void clear_vals();
  static const int kValsFieldNumber = 3;
  inline ::google::protobuf::uint32 vals(int index) const;
  inline void set_vals(int index, ::google::protobuf::uint32 value);
  inline void add_vals(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      vals() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_vals();

  // optional .osmpbf.info_t info = 4;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 4;
  inline const ::osmpbf::info_t& info() const;
  inline ::osmpbf::info_t* mutable_info();
  inline ::osmpbf::info_t* release_info();
  inline void set_allocated_info(::osmpbf::info_t* info);

  // required sint64 lat = 8;
  inline bool has_lat() const;
  inline void clear_lat();
  static const int kLatFieldNumber = 8;
  inline ::google::protobuf::int64 lat() const;
  inline void set_lat(::google::protobuf::int64 value);

  // required sint64 lon = 9;
  inline bool has_lon() const;
  inline void clear_lon();
  static const int kLonFieldNumber = 9;
  inline ::google::protobuf::int64 lon() const;
  inline void set_lon(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:osmpbf.node_t)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_lat();
  inline void clear_has_lat();
  inline void set_has_lon();
  inline void clear_has_lon();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > keys_;
  mutable int _keys_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > vals_;
  mutable int _vals_cached_byte_size_;
  ::osmpbf::info_t* info_;
  ::google::protobuf::int64 lat_;
  ::google::protobuf::int64 lon_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_osmformat_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_osmformat_2eproto();
  #endif
  friend void protobuf_AssignDesc_osmformat_2eproto();
  friend void protobuf_ShutdownFile_osmformat_2eproto();

  void InitAsDefaultInstance();
  static node_t* default_instance_;
};
// -------------------------------------------------------------------

class dense_nodes_t : public ::google::protobuf::MessageLite {
 public:
  dense_nodes_t();
  virtual ~dense_nodes_t();

  dense_nodes_t(const dense_nodes_t& from);

  inline dense_nodes_t& operator=(const dense_nodes_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const dense_nodes_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const dense_nodes_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(dense_nodes_t* other);

  // implements Message ----------------------------------------------

  dense_nodes_t* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const dense_nodes_t& from);
  void MergeFrom(const dense_nodes_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint64 id = 1 [packed = true];
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id(int index) const;
  inline void set_id(int index, ::google::protobuf::int64 value);
  inline void add_id(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_id();

  // optional .osmpbf.dense_info_t denseinfo = 5;
  inline bool has_denseinfo() const;
  inline void clear_denseinfo();
  static const int kDenseinfoFieldNumber = 5;
  inline const ::osmpbf::dense_info_t& denseinfo() const;
  inline ::osmpbf::dense_info_t* mutable_denseinfo();
  inline ::osmpbf::dense_info_t* release_denseinfo();
  inline void set_allocated_denseinfo(::osmpbf::dense_info_t* denseinfo);

  // repeated sint64 lat = 8 [packed = true];
  inline int lat_size() const;
  inline void clear_lat();
  static const int kLatFieldNumber = 8;
  inline ::google::protobuf::int64 lat(int index) const;
  inline void set_lat(int index, ::google::protobuf::int64 value);
  inline void add_lat(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      lat() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_lat();

  // repeated sint64 lon = 9 [packed = true];
  inline int lon_size() const;
  inline void clear_lon();
  static const int kLonFieldNumber = 9;
  inline ::google::protobuf::int64 lon(int index) const;
  inline void set_lon(int index, ::google::protobuf::int64 value);
  inline void add_lon(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      lon() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_lon();

  // repeated int32 keys_vals = 10 [packed = true];
  inline int keys_vals_size() const;
  inline void clear_keys_vals();
  static const int kKeysValsFieldNumber = 10;
  inline ::google::protobuf::int32 keys_vals(int index) const;
  inline void set_keys_vals(int index, ::google::protobuf::int32 value);
  inline void add_keys_vals(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      keys_vals() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_keys_vals();

  // @@protoc_insertion_point(class_scope:osmpbf.dense_nodes_t)
 private:
  inline void set_has_denseinfo();
  inline void clear_has_denseinfo();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > id_;
  mutable int _id_cached_byte_size_;
  ::osmpbf::dense_info_t* denseinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > lat_;
  mutable int _lat_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > lon_;
  mutable int _lon_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > keys_vals_;
  mutable int _keys_vals_cached_byte_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_osmformat_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_osmformat_2eproto();
  #endif
  friend void protobuf_AssignDesc_osmformat_2eproto();
  friend void protobuf_ShutdownFile_osmformat_2eproto();

  void InitAsDefaultInstance();
  static dense_nodes_t* default_instance_;
};
// -------------------------------------------------------------------

class way_t : public ::google::protobuf::MessageLite {
 public:
  way_t();
  virtual ~way_t();

  way_t(const way_t& from);

  inline way_t& operator=(const way_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const way_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const way_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(way_t* other);

  // implements Message ----------------------------------------------

  way_t* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const way_t& from);
  void MergeFrom(const way_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // repeated uint32 keys = 2 [packed = true];
  inline int keys_size() const;
  inline void clear_keys();
  static const int kKeysFieldNumber = 2;
  inline ::google::protobuf::uint32 keys(int index) const;
  inline void set_keys(int index, ::google::protobuf::uint32 value);
  inline void add_keys(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      keys() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_keys();

  // repeated uint32 vals = 3 [packed = true];
  inline int vals_size() const;
  inline void clear_vals();
  static const int kValsFieldNumber = 3;
  inline ::google::protobuf::uint32 vals(int index) const;
  inline void set_vals(int index, ::google::protobuf::uint32 value);
  inline void add_vals(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      vals() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_vals();

  // optional .osmpbf.info_t info = 4;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 4;
  inline const ::osmpbf::info_t& info() const;
  inline ::osmpbf::info_t* mutable_info();
  inline ::osmpbf::info_t* release_info();
  inline void set_allocated_info(::osmpbf::info_t* info);

  // repeated sint64 refs = 8 [packed = true];
  inline int refs_size() const;
  inline void clear_refs();
  static const int kRefsFieldNumber = 8;
  inline ::google::protobuf::int64 refs(int index) const;
  inline void set_refs(int index, ::google::protobuf::int64 value);
  inline void add_refs(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      refs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_refs();

  // @@protoc_insertion_point(class_scope:osmpbf.way_t)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_info();
  inline void clear_has_info();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > keys_;
  mutable int _keys_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > vals_;
  mutable int _vals_cached_byte_size_;
  ::osmpbf::info_t* info_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > refs_;
  mutable int _refs_cached_byte_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_osmformat_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_osmformat_2eproto();
  #endif
  friend void protobuf_AssignDesc_osmformat_2eproto();
  friend void protobuf_ShutdownFile_osmformat_2eproto();

  void InitAsDefaultInstance();
  static way_t* default_instance_;
};
// -------------------------------------------------------------------

class relation_t : public ::google::protobuf::MessageLite {
 public:
  relation_t();
  virtual ~relation_t();

  relation_t(const relation_t& from);

  inline relation_t& operator=(const relation_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const relation_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const relation_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(relation_t* other);

  // implements Message ----------------------------------------------

  relation_t* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const relation_t& from);
  void MergeFrom(const relation_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef relation_t_member_type_t member_type_t;
  static const member_type_t NODE = relation_t_member_type_t_NODE;
  static const member_type_t WAY = relation_t_member_type_t_WAY;
  static const member_type_t RELATION = relation_t_member_type_t_RELATION;
  static inline bool member_type_t_IsValid(int value) {
    return relation_t_member_type_t_IsValid(value);
  }
  static const member_type_t member_type_t_MIN =
    relation_t_member_type_t_member_type_t_MIN;
  static const member_type_t member_type_t_MAX =
    relation_t_member_type_t_member_type_t_MAX;
  static const int member_type_t_ARRAYSIZE =
    relation_t_member_type_t_member_type_t_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // repeated uint32 keys = 2 [packed = true];
  inline int keys_size() const;
  inline void clear_keys();
  static const int kKeysFieldNumber = 2;
  inline ::google::protobuf::uint32 keys(int index) const;
  inline void set_keys(int index, ::google::protobuf::uint32 value);
  inline void add_keys(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      keys() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_keys();

  // repeated uint32 vals = 3 [packed = true];
  inline int vals_size() const;
  inline void clear_vals();
  static const int kValsFieldNumber = 3;
  inline ::google::protobuf::uint32 vals(int index) const;
  inline void set_vals(int index, ::google::protobuf::uint32 value);
  inline void add_vals(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      vals() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_vals();

  // optional .osmpbf.info_t info = 4;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 4;
  inline const ::osmpbf::info_t& info() const;
  inline ::osmpbf::info_t* mutable_info();
  inline ::osmpbf::info_t* release_info();
  inline void set_allocated_info(::osmpbf::info_t* info);

  // repeated int32 roles_sid = 8 [packed = true];
  inline int roles_sid_size() const;
  inline void clear_roles_sid();
  static const int kRolesSidFieldNumber = 8;
  inline ::google::protobuf::int32 roles_sid(int index) const;
  inline void set_roles_sid(int index, ::google::protobuf::int32 value);
  inline void add_roles_sid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      roles_sid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_roles_sid();

  // repeated sint64 memids = 9 [packed = true];
  inline int memids_size() const;
  inline void clear_memids();
  static const int kMemidsFieldNumber = 9;
  inline ::google::protobuf::int64 memids(int index) const;
  inline void set_memids(int index, ::google::protobuf::int64 value);
  inline void add_memids(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      memids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_memids();

  // repeated .osmpbf.relation_t.member_type_t types = 10 [packed = true];
  inline int types_size() const;
  inline void clear_types();
  static const int kTypesFieldNumber = 10;
  inline ::osmpbf::relation_t_member_type_t types(int index) const;
  inline void set_types(int index, ::osmpbf::relation_t_member_type_t value);
  inline void add_types(::osmpbf::relation_t_member_type_t value);
  inline const ::google::protobuf::RepeatedField<int>& types() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_types();

  // @@protoc_insertion_point(class_scope:osmpbf.relation_t)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_info();
  inline void clear_has_info();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > keys_;
  mutable int _keys_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > vals_;
  mutable int _vals_cached_byte_size_;
  ::osmpbf::info_t* info_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > roles_sid_;
  mutable int _roles_sid_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > memids_;
  mutable int _memids_cached_byte_size_;
  ::google::protobuf::RepeatedField<int> types_;
  mutable int _types_cached_byte_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_osmformat_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_osmformat_2eproto();
  #endif
  friend void protobuf_AssignDesc_osmformat_2eproto();
  friend void protobuf_ShutdownFile_osmformat_2eproto();

  void InitAsDefaultInstance();
  static relation_t* default_instance_;
};
// ===================================================================


// ===================================================================

// header_block_t

// optional .osmpbf.header_bbox_t bbox = 1;
inline bool header_block_t::has_bbox() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void header_block_t::set_has_bbox() {
  _has_bits_[0] |= 0x00000001u;
}
inline void header_block_t::clear_has_bbox() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void header_block_t::clear_bbox() {
  if (bbox_ != NULL) bbox_->::osmpbf::header_bbox_t::Clear();
  clear_has_bbox();
}
inline const ::osmpbf::header_bbox_t& header_block_t::bbox() const {
  // @@protoc_insertion_point(field_get:osmpbf.header_block_t.bbox)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return bbox_ != NULL ? *bbox_ : *default_instance().bbox_;
#else
  return bbox_ != NULL ? *bbox_ : *default_instance_->bbox_;
#endif
}
inline ::osmpbf::header_bbox_t* header_block_t::mutable_bbox() {
  set_has_bbox();
  if (bbox_ == NULL) bbox_ = new ::osmpbf::header_bbox_t;
  // @@protoc_insertion_point(field_mutable:osmpbf.header_block_t.bbox)
  return bbox_;
}
inline ::osmpbf::header_bbox_t* header_block_t::release_bbox() {
  clear_has_bbox();
  ::osmpbf::header_bbox_t* temp = bbox_;
  bbox_ = NULL;
  return temp;
}
inline void header_block_t::set_allocated_bbox(::osmpbf::header_bbox_t* bbox) {
  delete bbox_;
  bbox_ = bbox;
  if (bbox) {
    set_has_bbox();
  } else {
    clear_has_bbox();
  }
  // @@protoc_insertion_point(field_set_allocated:osmpbf.header_block_t.bbox)
}

// repeated string required_features = 4;
inline int header_block_t::required_features_size() const {
  return required_features_.size();
}
inline void header_block_t::clear_required_features() {
  required_features_.Clear();
}
inline const ::std::string& header_block_t::required_features(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.header_block_t.required_features)
  return required_features_.Get(index);
}
inline ::std::string* header_block_t::mutable_required_features(int index) {
  // @@protoc_insertion_point(field_mutable:osmpbf.header_block_t.required_features)
  return required_features_.Mutable(index);
}
inline void header_block_t::set_required_features(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:osmpbf.header_block_t.required_features)
  required_features_.Mutable(index)->assign(value);
}
inline void header_block_t::set_required_features(int index, const char* value) {
  required_features_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:osmpbf.header_block_t.required_features)
}
inline void header_block_t::set_required_features(int index, const char* value, size_t size) {
  required_features_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:osmpbf.header_block_t.required_features)
}
inline ::std::string* header_block_t::add_required_features() {
  return required_features_.Add();
}
inline void header_block_t::add_required_features(const ::std::string& value) {
  required_features_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:osmpbf.header_block_t.required_features)
}
inline void header_block_t::add_required_features(const char* value) {
  required_features_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:osmpbf.header_block_t.required_features)
}
inline void header_block_t::add_required_features(const char* value, size_t size) {
  required_features_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:osmpbf.header_block_t.required_features)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
header_block_t::required_features() const {
  // @@protoc_insertion_point(field_list:osmpbf.header_block_t.required_features)
  return required_features_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
header_block_t::mutable_required_features() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.header_block_t.required_features)
  return &required_features_;
}

// repeated string optional_features = 5;
inline int header_block_t::optional_features_size() const {
  return optional_features_.size();
}
inline void header_block_t::clear_optional_features() {
  optional_features_.Clear();
}
inline const ::std::string& header_block_t::optional_features(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.header_block_t.optional_features)
  return optional_features_.Get(index);
}
inline ::std::string* header_block_t::mutable_optional_features(int index) {
  // @@protoc_insertion_point(field_mutable:osmpbf.header_block_t.optional_features)
  return optional_features_.Mutable(index);
}
inline void header_block_t::set_optional_features(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:osmpbf.header_block_t.optional_features)
  optional_features_.Mutable(index)->assign(value);
}
inline void header_block_t::set_optional_features(int index, const char* value) {
  optional_features_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:osmpbf.header_block_t.optional_features)
}
inline void header_block_t::set_optional_features(int index, const char* value, size_t size) {
  optional_features_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:osmpbf.header_block_t.optional_features)
}
inline ::std::string* header_block_t::add_optional_features() {
  return optional_features_.Add();
}
inline void header_block_t::add_optional_features(const ::std::string& value) {
  optional_features_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:osmpbf.header_block_t.optional_features)
}
inline void header_block_t::add_optional_features(const char* value) {
  optional_features_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:osmpbf.header_block_t.optional_features)
}
inline void header_block_t::add_optional_features(const char* value, size_t size) {
  optional_features_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:osmpbf.header_block_t.optional_features)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
header_block_t::optional_features() const {
  // @@protoc_insertion_point(field_list:osmpbf.header_block_t.optional_features)
  return optional_features_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
header_block_t::mutable_optional_features() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.header_block_t.optional_features)
  return &optional_features_;
}

// optional string writingprogram = 16;
inline bool header_block_t::has_writingprogram() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void header_block_t::set_has_writingprogram() {
  _has_bits_[0] |= 0x00000008u;
}
inline void header_block_t::clear_has_writingprogram() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void header_block_t::clear_writingprogram() {
  if (writingprogram_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    writingprogram_->clear();
  }
  clear_has_writingprogram();
}
inline const ::std::string& header_block_t::writingprogram() const {
  // @@protoc_insertion_point(field_get:osmpbf.header_block_t.writingprogram)
  return *writingprogram_;
}
inline void header_block_t::set_writingprogram(const ::std::string& value) {
  set_has_writingprogram();
  if (writingprogram_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    writingprogram_ = new ::std::string;
  }
  writingprogram_->assign(value);
  // @@protoc_insertion_point(field_set:osmpbf.header_block_t.writingprogram)
}
inline void header_block_t::set_writingprogram(const char* value) {
  set_has_writingprogram();
  if (writingprogram_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    writingprogram_ = new ::std::string;
  }
  writingprogram_->assign(value);
  // @@protoc_insertion_point(field_set_char:osmpbf.header_block_t.writingprogram)
}
inline void header_block_t::set_writingprogram(const char* value, size_t size) {
  set_has_writingprogram();
  if (writingprogram_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    writingprogram_ = new ::std::string;
  }
  writingprogram_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:osmpbf.header_block_t.writingprogram)
}
inline ::std::string* header_block_t::mutable_writingprogram() {
  set_has_writingprogram();
  if (writingprogram_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    writingprogram_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:osmpbf.header_block_t.writingprogram)
  return writingprogram_;
}
inline ::std::string* header_block_t::release_writingprogram() {
  clear_has_writingprogram();
  if (writingprogram_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = writingprogram_;
    writingprogram_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void header_block_t::set_allocated_writingprogram(::std::string* writingprogram) {
  if (writingprogram_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete writingprogram_;
  }
  if (writingprogram) {
    set_has_writingprogram();
    writingprogram_ = writingprogram;
  } else {
    clear_has_writingprogram();
    writingprogram_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:osmpbf.header_block_t.writingprogram)
}

// optional string source = 17;
inline bool header_block_t::has_source() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void header_block_t::set_has_source() {
  _has_bits_[0] |= 0x00000010u;
}
inline void header_block_t::clear_has_source() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void header_block_t::clear_source() {
  if (source_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    source_->clear();
  }
  clear_has_source();
}
inline const ::std::string& header_block_t::source() const {
  // @@protoc_insertion_point(field_get:osmpbf.header_block_t.source)
  return *source_;
}
inline void header_block_t::set_source(const ::std::string& value) {
  set_has_source();
  if (source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    source_ = new ::std::string;
  }
  source_->assign(value);
  // @@protoc_insertion_point(field_set:osmpbf.header_block_t.source)
}
inline void header_block_t::set_source(const char* value) {
  set_has_source();
  if (source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    source_ = new ::std::string;
  }
  source_->assign(value);
  // @@protoc_insertion_point(field_set_char:osmpbf.header_block_t.source)
}
inline void header_block_t::set_source(const char* value, size_t size) {
  set_has_source();
  if (source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    source_ = new ::std::string;
  }
  source_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:osmpbf.header_block_t.source)
}
inline ::std::string* header_block_t::mutable_source() {
  set_has_source();
  if (source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    source_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:osmpbf.header_block_t.source)
  return source_;
}
inline ::std::string* header_block_t::release_source() {
  clear_has_source();
  if (source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = source_;
    source_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void header_block_t::set_allocated_source(::std::string* source) {
  if (source_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete source_;
  }
  if (source) {
    set_has_source();
    source_ = source;
  } else {
    clear_has_source();
    source_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:osmpbf.header_block_t.source)
}

// optional int64 osmosis_replication_timestamp = 32;
inline bool header_block_t::has_osmosis_replication_timestamp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void header_block_t::set_has_osmosis_replication_timestamp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void header_block_t::clear_has_osmosis_replication_timestamp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void header_block_t::clear_osmosis_replication_timestamp() {
  osmosis_replication_timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_osmosis_replication_timestamp();
}
inline ::google::protobuf::int64 header_block_t::osmosis_replication_timestamp() const {
  // @@protoc_insertion_point(field_get:osmpbf.header_block_t.osmosis_replication_timestamp)
  return osmosis_replication_timestamp_;
}
inline void header_block_t::set_osmosis_replication_timestamp(::google::protobuf::int64 value) {
  set_has_osmosis_replication_timestamp();
  osmosis_replication_timestamp_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.header_block_t.osmosis_replication_timestamp)
}

// optional int64 osmosis_replication_sequence_number = 33;
inline bool header_block_t::has_osmosis_replication_sequence_number() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void header_block_t::set_has_osmosis_replication_sequence_number() {
  _has_bits_[0] |= 0x00000040u;
}
inline void header_block_t::clear_has_osmosis_replication_sequence_number() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void header_block_t::clear_osmosis_replication_sequence_number() {
  osmosis_replication_sequence_number_ = GOOGLE_LONGLONG(0);
  clear_has_osmosis_replication_sequence_number();
}
inline ::google::protobuf::int64 header_block_t::osmosis_replication_sequence_number() const {
  // @@protoc_insertion_point(field_get:osmpbf.header_block_t.osmosis_replication_sequence_number)
  return osmosis_replication_sequence_number_;
}
inline void header_block_t::set_osmosis_replication_sequence_number(::google::protobuf::int64 value) {
  set_has_osmosis_replication_sequence_number();
  osmosis_replication_sequence_number_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.header_block_t.osmosis_replication_sequence_number)
}

// optional string osmosis_replication_base_url = 34;
inline bool header_block_t::has_osmosis_replication_base_url() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void header_block_t::set_has_osmosis_replication_base_url() {
  _has_bits_[0] |= 0x00000080u;
}
inline void header_block_t::clear_has_osmosis_replication_base_url() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void header_block_t::clear_osmosis_replication_base_url() {
  if (osmosis_replication_base_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    osmosis_replication_base_url_->clear();
  }
  clear_has_osmosis_replication_base_url();
}
inline const ::std::string& header_block_t::osmosis_replication_base_url() const {
  // @@protoc_insertion_point(field_get:osmpbf.header_block_t.osmosis_replication_base_url)
  return *osmosis_replication_base_url_;
}
inline void header_block_t::set_osmosis_replication_base_url(const ::std::string& value) {
  set_has_osmosis_replication_base_url();
  if (osmosis_replication_base_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    osmosis_replication_base_url_ = new ::std::string;
  }
  osmosis_replication_base_url_->assign(value);
  // @@protoc_insertion_point(field_set:osmpbf.header_block_t.osmosis_replication_base_url)
}
inline void header_block_t::set_osmosis_replication_base_url(const char* value) {
  set_has_osmosis_replication_base_url();
  if (osmosis_replication_base_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    osmosis_replication_base_url_ = new ::std::string;
  }
  osmosis_replication_base_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:osmpbf.header_block_t.osmosis_replication_base_url)
}
inline void header_block_t::set_osmosis_replication_base_url(const char* value, size_t size) {
  set_has_osmosis_replication_base_url();
  if (osmosis_replication_base_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    osmosis_replication_base_url_ = new ::std::string;
  }
  osmosis_replication_base_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:osmpbf.header_block_t.osmosis_replication_base_url)
}
inline ::std::string* header_block_t::mutable_osmosis_replication_base_url() {
  set_has_osmosis_replication_base_url();
  if (osmosis_replication_base_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    osmosis_replication_base_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:osmpbf.header_block_t.osmosis_replication_base_url)
  return osmosis_replication_base_url_;
}
inline ::std::string* header_block_t::release_osmosis_replication_base_url() {
  clear_has_osmosis_replication_base_url();
  if (osmosis_replication_base_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = osmosis_replication_base_url_;
    osmosis_replication_base_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void header_block_t::set_allocated_osmosis_replication_base_url(::std::string* osmosis_replication_base_url) {
  if (osmosis_replication_base_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete osmosis_replication_base_url_;
  }
  if (osmosis_replication_base_url) {
    set_has_osmosis_replication_base_url();
    osmosis_replication_base_url_ = osmosis_replication_base_url;
  } else {
    clear_has_osmosis_replication_base_url();
    osmosis_replication_base_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:osmpbf.header_block_t.osmosis_replication_base_url)
}

// -------------------------------------------------------------------

// header_bbox_t

// required sint64 left = 1;
inline bool header_bbox_t::has_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void header_bbox_t::set_has_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void header_bbox_t::clear_has_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void header_bbox_t::clear_left() {
  left_ = GOOGLE_LONGLONG(0);
  clear_has_left();
}
inline ::google::protobuf::int64 header_bbox_t::left() const {
  // @@protoc_insertion_point(field_get:osmpbf.header_bbox_t.left)
  return left_;
}
inline void header_bbox_t::set_left(::google::protobuf::int64 value) {
  set_has_left();
  left_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.header_bbox_t.left)
}

// required sint64 right = 2;
inline bool header_bbox_t::has_right() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void header_bbox_t::set_has_right() {
  _has_bits_[0] |= 0x00000002u;
}
inline void header_bbox_t::clear_has_right() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void header_bbox_t::clear_right() {
  right_ = GOOGLE_LONGLONG(0);
  clear_has_right();
}
inline ::google::protobuf::int64 header_bbox_t::right() const {
  // @@protoc_insertion_point(field_get:osmpbf.header_bbox_t.right)
  return right_;
}
inline void header_bbox_t::set_right(::google::protobuf::int64 value) {
  set_has_right();
  right_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.header_bbox_t.right)
}

// required sint64 top = 3;
inline bool header_bbox_t::has_top() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void header_bbox_t::set_has_top() {
  _has_bits_[0] |= 0x00000004u;
}
inline void header_bbox_t::clear_has_top() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void header_bbox_t::clear_top() {
  top_ = GOOGLE_LONGLONG(0);
  clear_has_top();
}
inline ::google::protobuf::int64 header_bbox_t::top() const {
  // @@protoc_insertion_point(field_get:osmpbf.header_bbox_t.top)
  return top_;
}
inline void header_bbox_t::set_top(::google::protobuf::int64 value) {
  set_has_top();
  top_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.header_bbox_t.top)
}

// required sint64 bottom = 4;
inline bool header_bbox_t::has_bottom() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void header_bbox_t::set_has_bottom() {
  _has_bits_[0] |= 0x00000008u;
}
inline void header_bbox_t::clear_has_bottom() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void header_bbox_t::clear_bottom() {
  bottom_ = GOOGLE_LONGLONG(0);
  clear_has_bottom();
}
inline ::google::protobuf::int64 header_bbox_t::bottom() const {
  // @@protoc_insertion_point(field_get:osmpbf.header_bbox_t.bottom)
  return bottom_;
}
inline void header_bbox_t::set_bottom(::google::protobuf::int64 value) {
  set_has_bottom();
  bottom_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.header_bbox_t.bottom)
}

// -------------------------------------------------------------------

// primitive_block_t

// required .osmpbf.string_table_t string_table = 1;
inline bool primitive_block_t::has_string_table() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void primitive_block_t::set_has_string_table() {
  _has_bits_[0] |= 0x00000001u;
}
inline void primitive_block_t::clear_has_string_table() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void primitive_block_t::clear_string_table() {
  if (string_table_ != NULL) string_table_->::osmpbf::string_table_t::Clear();
  clear_has_string_table();
}
inline const ::osmpbf::string_table_t& primitive_block_t::string_table() const {
  // @@protoc_insertion_point(field_get:osmpbf.primitive_block_t.string_table)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return string_table_ != NULL ? *string_table_ : *default_instance().string_table_;
#else
  return string_table_ != NULL ? *string_table_ : *default_instance_->string_table_;
#endif
}
inline ::osmpbf::string_table_t* primitive_block_t::mutable_string_table() {
  set_has_string_table();
  if (string_table_ == NULL) string_table_ = new ::osmpbf::string_table_t;
  // @@protoc_insertion_point(field_mutable:osmpbf.primitive_block_t.string_table)
  return string_table_;
}
inline ::osmpbf::string_table_t* primitive_block_t::release_string_table() {
  clear_has_string_table();
  ::osmpbf::string_table_t* temp = string_table_;
  string_table_ = NULL;
  return temp;
}
inline void primitive_block_t::set_allocated_string_table(::osmpbf::string_table_t* string_table) {
  delete string_table_;
  string_table_ = string_table;
  if (string_table) {
    set_has_string_table();
  } else {
    clear_has_string_table();
  }
  // @@protoc_insertion_point(field_set_allocated:osmpbf.primitive_block_t.string_table)
}

// repeated .osmpbf.primitive_group_t primitive_group = 2;
inline int primitive_block_t::primitive_group_size() const {
  return primitive_group_.size();
}
inline void primitive_block_t::clear_primitive_group() {
  primitive_group_.Clear();
}
inline const ::osmpbf::primitive_group_t& primitive_block_t::primitive_group(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.primitive_block_t.primitive_group)
  return primitive_group_.Get(index);
}
inline ::osmpbf::primitive_group_t* primitive_block_t::mutable_primitive_group(int index) {
  // @@protoc_insertion_point(field_mutable:osmpbf.primitive_block_t.primitive_group)
  return primitive_group_.Mutable(index);
}
inline ::osmpbf::primitive_group_t* primitive_block_t::add_primitive_group() {
  // @@protoc_insertion_point(field_add:osmpbf.primitive_block_t.primitive_group)
  return primitive_group_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::osmpbf::primitive_group_t >&
primitive_block_t::primitive_group() const {
  // @@protoc_insertion_point(field_list:osmpbf.primitive_block_t.primitive_group)
  return primitive_group_;
}
inline ::google::protobuf::RepeatedPtrField< ::osmpbf::primitive_group_t >*
primitive_block_t::mutable_primitive_group() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.primitive_block_t.primitive_group)
  return &primitive_group_;
}

// optional int32 granularity = 17 [default = 100];
inline bool primitive_block_t::has_granularity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void primitive_block_t::set_has_granularity() {
  _has_bits_[0] |= 0x00000004u;
}
inline void primitive_block_t::clear_has_granularity() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void primitive_block_t::clear_granularity() {
  granularity_ = 100;
  clear_has_granularity();
}
inline ::google::protobuf::int32 primitive_block_t::granularity() const {
  // @@protoc_insertion_point(field_get:osmpbf.primitive_block_t.granularity)
  return granularity_;
}
inline void primitive_block_t::set_granularity(::google::protobuf::int32 value) {
  set_has_granularity();
  granularity_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.primitive_block_t.granularity)
}

// optional int64 lat_offset = 19 [default = 0];
inline bool primitive_block_t::has_lat_offset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void primitive_block_t::set_has_lat_offset() {
  _has_bits_[0] |= 0x00000008u;
}
inline void primitive_block_t::clear_has_lat_offset() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void primitive_block_t::clear_lat_offset() {
  lat_offset_ = GOOGLE_LONGLONG(0);
  clear_has_lat_offset();
}
inline ::google::protobuf::int64 primitive_block_t::lat_offset() const {
  // @@protoc_insertion_point(field_get:osmpbf.primitive_block_t.lat_offset)
  return lat_offset_;
}
inline void primitive_block_t::set_lat_offset(::google::protobuf::int64 value) {
  set_has_lat_offset();
  lat_offset_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.primitive_block_t.lat_offset)
}

// optional int64 lon_offset = 20 [default = 0];
inline bool primitive_block_t::has_lon_offset() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void primitive_block_t::set_has_lon_offset() {
  _has_bits_[0] |= 0x00000010u;
}
inline void primitive_block_t::clear_has_lon_offset() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void primitive_block_t::clear_lon_offset() {
  lon_offset_ = GOOGLE_LONGLONG(0);
  clear_has_lon_offset();
}
inline ::google::protobuf::int64 primitive_block_t::lon_offset() const {
  // @@protoc_insertion_point(field_get:osmpbf.primitive_block_t.lon_offset)
  return lon_offset_;
}
inline void primitive_block_t::set_lon_offset(::google::protobuf::int64 value) {
  set_has_lon_offset();
  lon_offset_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.primitive_block_t.lon_offset)
}

// optional int32 date_granularity = 18 [default = 1000];
inline bool primitive_block_t::has_date_granularity() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void primitive_block_t::set_has_date_granularity() {
  _has_bits_[0] |= 0x00000020u;
}
inline void primitive_block_t::clear_has_date_granularity() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void primitive_block_t::clear_date_granularity() {
  date_granularity_ = 1000;
  clear_has_date_granularity();
}
inline ::google::protobuf::int32 primitive_block_t::date_granularity() const {
  // @@protoc_insertion_point(field_get:osmpbf.primitive_block_t.date_granularity)
  return date_granularity_;
}
inline void primitive_block_t::set_date_granularity(::google::protobuf::int32 value) {
  set_has_date_granularity();
  date_granularity_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.primitive_block_t.date_granularity)
}

// -------------------------------------------------------------------

// primitive_group_t

// repeated .osmpbf.node_t nodes = 1;
inline int primitive_group_t::nodes_size() const {
  return nodes_.size();
}
inline void primitive_group_t::clear_nodes() {
  nodes_.Clear();
}
inline const ::osmpbf::node_t& primitive_group_t::nodes(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.primitive_group_t.nodes)
  return nodes_.Get(index);
}
inline ::osmpbf::node_t* primitive_group_t::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:osmpbf.primitive_group_t.nodes)
  return nodes_.Mutable(index);
}
inline ::osmpbf::node_t* primitive_group_t::add_nodes() {
  // @@protoc_insertion_point(field_add:osmpbf.primitive_group_t.nodes)
  return nodes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::osmpbf::node_t >&
primitive_group_t::nodes() const {
  // @@protoc_insertion_point(field_list:osmpbf.primitive_group_t.nodes)
  return nodes_;
}
inline ::google::protobuf::RepeatedPtrField< ::osmpbf::node_t >*
primitive_group_t::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.primitive_group_t.nodes)
  return &nodes_;
}

// optional .osmpbf.dense_nodes_t dense = 2;
inline bool primitive_group_t::has_dense() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void primitive_group_t::set_has_dense() {
  _has_bits_[0] |= 0x00000002u;
}
inline void primitive_group_t::clear_has_dense() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void primitive_group_t::clear_dense() {
  if (dense_ != NULL) dense_->::osmpbf::dense_nodes_t::Clear();
  clear_has_dense();
}
inline const ::osmpbf::dense_nodes_t& primitive_group_t::dense() const {
  // @@protoc_insertion_point(field_get:osmpbf.primitive_group_t.dense)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return dense_ != NULL ? *dense_ : *default_instance().dense_;
#else
  return dense_ != NULL ? *dense_ : *default_instance_->dense_;
#endif
}
inline ::osmpbf::dense_nodes_t* primitive_group_t::mutable_dense() {
  set_has_dense();
  if (dense_ == NULL) dense_ = new ::osmpbf::dense_nodes_t;
  // @@protoc_insertion_point(field_mutable:osmpbf.primitive_group_t.dense)
  return dense_;
}
inline ::osmpbf::dense_nodes_t* primitive_group_t::release_dense() {
  clear_has_dense();
  ::osmpbf::dense_nodes_t* temp = dense_;
  dense_ = NULL;
  return temp;
}
inline void primitive_group_t::set_allocated_dense(::osmpbf::dense_nodes_t* dense) {
  delete dense_;
  dense_ = dense;
  if (dense) {
    set_has_dense();
  } else {
    clear_has_dense();
  }
  // @@protoc_insertion_point(field_set_allocated:osmpbf.primitive_group_t.dense)
}

// repeated .osmpbf.way_t ways = 3;
inline int primitive_group_t::ways_size() const {
  return ways_.size();
}
inline void primitive_group_t::clear_ways() {
  ways_.Clear();
}
inline const ::osmpbf::way_t& primitive_group_t::ways(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.primitive_group_t.ways)
  return ways_.Get(index);
}
inline ::osmpbf::way_t* primitive_group_t::mutable_ways(int index) {
  // @@protoc_insertion_point(field_mutable:osmpbf.primitive_group_t.ways)
  return ways_.Mutable(index);
}
inline ::osmpbf::way_t* primitive_group_t::add_ways() {
  // @@protoc_insertion_point(field_add:osmpbf.primitive_group_t.ways)
  return ways_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::osmpbf::way_t >&
primitive_group_t::ways() const {
  // @@protoc_insertion_point(field_list:osmpbf.primitive_group_t.ways)
  return ways_;
}
inline ::google::protobuf::RepeatedPtrField< ::osmpbf::way_t >*
primitive_group_t::mutable_ways() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.primitive_group_t.ways)
  return &ways_;
}

// repeated .osmpbf.relation_t relations = 4;
inline int primitive_group_t::relations_size() const {
  return relations_.size();
}
inline void primitive_group_t::clear_relations() {
  relations_.Clear();
}
inline const ::osmpbf::relation_t& primitive_group_t::relations(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.primitive_group_t.relations)
  return relations_.Get(index);
}
inline ::osmpbf::relation_t* primitive_group_t::mutable_relations(int index) {
  // @@protoc_insertion_point(field_mutable:osmpbf.primitive_group_t.relations)
  return relations_.Mutable(index);
}
inline ::osmpbf::relation_t* primitive_group_t::add_relations() {
  // @@protoc_insertion_point(field_add:osmpbf.primitive_group_t.relations)
  return relations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::osmpbf::relation_t >&
primitive_group_t::relations() const {
  // @@protoc_insertion_point(field_list:osmpbf.primitive_group_t.relations)
  return relations_;
}
inline ::google::protobuf::RepeatedPtrField< ::osmpbf::relation_t >*
primitive_group_t::mutable_relations() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.primitive_group_t.relations)
  return &relations_;
}

// repeated .osmpbf.change_set_t changesets = 5;
inline int primitive_group_t::changesets_size() const {
  return changesets_.size();
}
inline void primitive_group_t::clear_changesets() {
  changesets_.Clear();
}
inline const ::osmpbf::change_set_t& primitive_group_t::changesets(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.primitive_group_t.changesets)
  return changesets_.Get(index);
}
inline ::osmpbf::change_set_t* primitive_group_t::mutable_changesets(int index) {
  // @@protoc_insertion_point(field_mutable:osmpbf.primitive_group_t.changesets)
  return changesets_.Mutable(index);
}
inline ::osmpbf::change_set_t* primitive_group_t::add_changesets() {
  // @@protoc_insertion_point(field_add:osmpbf.primitive_group_t.changesets)
  return changesets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::osmpbf::change_set_t >&
primitive_group_t::changesets() const {
  // @@protoc_insertion_point(field_list:osmpbf.primitive_group_t.changesets)
  return changesets_;
}
inline ::google::protobuf::RepeatedPtrField< ::osmpbf::change_set_t >*
primitive_group_t::mutable_changesets() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.primitive_group_t.changesets)
  return &changesets_;
}

// -------------------------------------------------------------------

// string_table_t

// repeated bytes s = 1;
inline int string_table_t::s_size() const {
  return s_.size();
}
inline void string_table_t::clear_s() {
  s_.Clear();
}
inline const ::std::string& string_table_t::s(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.string_table_t.s)
  return s_.Get(index);
}
inline ::std::string* string_table_t::mutable_s(int index) {
  // @@protoc_insertion_point(field_mutable:osmpbf.string_table_t.s)
  return s_.Mutable(index);
}
inline void string_table_t::set_s(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:osmpbf.string_table_t.s)
  s_.Mutable(index)->assign(value);
}
inline void string_table_t::set_s(int index, const char* value) {
  s_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:osmpbf.string_table_t.s)
}
inline void string_table_t::set_s(int index, const void* value, size_t size) {
  s_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:osmpbf.string_table_t.s)
}
inline ::std::string* string_table_t::add_s() {
  return s_.Add();
}
inline void string_table_t::add_s(const ::std::string& value) {
  s_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:osmpbf.string_table_t.s)
}
inline void string_table_t::add_s(const char* value) {
  s_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:osmpbf.string_table_t.s)
}
inline void string_table_t::add_s(const void* value, size_t size) {
  s_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:osmpbf.string_table_t.s)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
string_table_t::s() const {
  // @@protoc_insertion_point(field_list:osmpbf.string_table_t.s)
  return s_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
string_table_t::mutable_s() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.string_table_t.s)
  return &s_;
}

// -------------------------------------------------------------------

// info_t

// optional int32 version = 1 [default = -1];
inline bool info_t::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void info_t::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void info_t::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void info_t::clear_version() {
  version_ = -1;
  clear_has_version();
}
inline ::google::protobuf::int32 info_t::version() const {
  // @@protoc_insertion_point(field_get:osmpbf.info_t.version)
  return version_;
}
inline void info_t::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.info_t.version)
}

// optional int64 timestamp = 2;
inline bool info_t::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void info_t::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void info_t::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void info_t::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 info_t::timestamp() const {
  // @@protoc_insertion_point(field_get:osmpbf.info_t.timestamp)
  return timestamp_;
}
inline void info_t::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.info_t.timestamp)
}

// optional int64 changeset = 3;
inline bool info_t::has_changeset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void info_t::set_has_changeset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void info_t::clear_has_changeset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void info_t::clear_changeset() {
  changeset_ = GOOGLE_LONGLONG(0);
  clear_has_changeset();
}
inline ::google::protobuf::int64 info_t::changeset() const {
  // @@protoc_insertion_point(field_get:osmpbf.info_t.changeset)
  return changeset_;
}
inline void info_t::set_changeset(::google::protobuf::int64 value) {
  set_has_changeset();
  changeset_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.info_t.changeset)
}

// optional int32 uid = 4;
inline bool info_t::has_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void info_t::set_has_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void info_t::clear_has_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void info_t::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
inline ::google::protobuf::int32 info_t::uid() const {
  // @@protoc_insertion_point(field_get:osmpbf.info_t.uid)
  return uid_;
}
inline void info_t::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.info_t.uid)
}

// optional uint32 user_sid = 5;
inline bool info_t::has_user_sid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void info_t::set_has_user_sid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void info_t::clear_has_user_sid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void info_t::clear_user_sid() {
  user_sid_ = 0u;
  clear_has_user_sid();
}
inline ::google::protobuf::uint32 info_t::user_sid() const {
  // @@protoc_insertion_point(field_get:osmpbf.info_t.user_sid)
  return user_sid_;
}
inline void info_t::set_user_sid(::google::protobuf::uint32 value) {
  set_has_user_sid();
  user_sid_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.info_t.user_sid)
}

// optional bool visible = 6;
inline bool info_t::has_visible() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void info_t::set_has_visible() {
  _has_bits_[0] |= 0x00000020u;
}
inline void info_t::clear_has_visible() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void info_t::clear_visible() {
  visible_ = false;
  clear_has_visible();
}
inline bool info_t::visible() const {
  // @@protoc_insertion_point(field_get:osmpbf.info_t.visible)
  return visible_;
}
inline void info_t::set_visible(bool value) {
  set_has_visible();
  visible_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.info_t.visible)
}

// -------------------------------------------------------------------

// dense_info_t

// repeated int32 version = 1 [packed = true];
inline int dense_info_t::version_size() const {
  return version_.size();
}
inline void dense_info_t::clear_version() {
  version_.Clear();
}
inline ::google::protobuf::int32 dense_info_t::version(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.dense_info_t.version)
  return version_.Get(index);
}
inline void dense_info_t::set_version(int index, ::google::protobuf::int32 value) {
  version_.Set(index, value);
  // @@protoc_insertion_point(field_set:osmpbf.dense_info_t.version)
}
inline void dense_info_t::add_version(::google::protobuf::int32 value) {
  version_.Add(value);
  // @@protoc_insertion_point(field_add:osmpbf.dense_info_t.version)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
dense_info_t::version() const {
  // @@protoc_insertion_point(field_list:osmpbf.dense_info_t.version)
  return version_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
dense_info_t::mutable_version() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.dense_info_t.version)
  return &version_;
}

// repeated sint64 timestamp = 2 [packed = true];
inline int dense_info_t::timestamp_size() const {
  return timestamp_.size();
}
inline void dense_info_t::clear_timestamp() {
  timestamp_.Clear();
}
inline ::google::protobuf::int64 dense_info_t::timestamp(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.dense_info_t.timestamp)
  return timestamp_.Get(index);
}
inline void dense_info_t::set_timestamp(int index, ::google::protobuf::int64 value) {
  timestamp_.Set(index, value);
  // @@protoc_insertion_point(field_set:osmpbf.dense_info_t.timestamp)
}
inline void dense_info_t::add_timestamp(::google::protobuf::int64 value) {
  timestamp_.Add(value);
  // @@protoc_insertion_point(field_add:osmpbf.dense_info_t.timestamp)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
dense_info_t::timestamp() const {
  // @@protoc_insertion_point(field_list:osmpbf.dense_info_t.timestamp)
  return timestamp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
dense_info_t::mutable_timestamp() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.dense_info_t.timestamp)
  return &timestamp_;
}

// repeated sint64 changeset = 3 [packed = true];
inline int dense_info_t::changeset_size() const {
  return changeset_.size();
}
inline void dense_info_t::clear_changeset() {
  changeset_.Clear();
}
inline ::google::protobuf::int64 dense_info_t::changeset(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.dense_info_t.changeset)
  return changeset_.Get(index);
}
inline void dense_info_t::set_changeset(int index, ::google::protobuf::int64 value) {
  changeset_.Set(index, value);
  // @@protoc_insertion_point(field_set:osmpbf.dense_info_t.changeset)
}
inline void dense_info_t::add_changeset(::google::protobuf::int64 value) {
  changeset_.Add(value);
  // @@protoc_insertion_point(field_add:osmpbf.dense_info_t.changeset)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
dense_info_t::changeset() const {
  // @@protoc_insertion_point(field_list:osmpbf.dense_info_t.changeset)
  return changeset_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
dense_info_t::mutable_changeset() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.dense_info_t.changeset)
  return &changeset_;
}

// repeated sint32 uid = 4 [packed = true];
inline int dense_info_t::uid_size() const {
  return uid_.size();
}
inline void dense_info_t::clear_uid() {
  uid_.Clear();
}
inline ::google::protobuf::int32 dense_info_t::uid(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.dense_info_t.uid)
  return uid_.Get(index);
}
inline void dense_info_t::set_uid(int index, ::google::protobuf::int32 value) {
  uid_.Set(index, value);
  // @@protoc_insertion_point(field_set:osmpbf.dense_info_t.uid)
}
inline void dense_info_t::add_uid(::google::protobuf::int32 value) {
  uid_.Add(value);
  // @@protoc_insertion_point(field_add:osmpbf.dense_info_t.uid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
dense_info_t::uid() const {
  // @@protoc_insertion_point(field_list:osmpbf.dense_info_t.uid)
  return uid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
dense_info_t::mutable_uid() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.dense_info_t.uid)
  return &uid_;
}

// repeated sint32 user_sid = 5 [packed = true];
inline int dense_info_t::user_sid_size() const {
  return user_sid_.size();
}
inline void dense_info_t::clear_user_sid() {
  user_sid_.Clear();
}
inline ::google::protobuf::int32 dense_info_t::user_sid(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.dense_info_t.user_sid)
  return user_sid_.Get(index);
}
inline void dense_info_t::set_user_sid(int index, ::google::protobuf::int32 value) {
  user_sid_.Set(index, value);
  // @@protoc_insertion_point(field_set:osmpbf.dense_info_t.user_sid)
}
inline void dense_info_t::add_user_sid(::google::protobuf::int32 value) {
  user_sid_.Add(value);
  // @@protoc_insertion_point(field_add:osmpbf.dense_info_t.user_sid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
dense_info_t::user_sid() const {
  // @@protoc_insertion_point(field_list:osmpbf.dense_info_t.user_sid)
  return user_sid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
dense_info_t::mutable_user_sid() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.dense_info_t.user_sid)
  return &user_sid_;
}

// repeated bool visible = 6 [packed = true];
inline int dense_info_t::visible_size() const {
  return visible_.size();
}
inline void dense_info_t::clear_visible() {
  visible_.Clear();
}
inline bool dense_info_t::visible(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.dense_info_t.visible)
  return visible_.Get(index);
}
inline void dense_info_t::set_visible(int index, bool value) {
  visible_.Set(index, value);
  // @@protoc_insertion_point(field_set:osmpbf.dense_info_t.visible)
}
inline void dense_info_t::add_visible(bool value) {
  visible_.Add(value);
  // @@protoc_insertion_point(field_add:osmpbf.dense_info_t.visible)
}
inline const ::google::protobuf::RepeatedField< bool >&
dense_info_t::visible() const {
  // @@protoc_insertion_point(field_list:osmpbf.dense_info_t.visible)
  return visible_;
}
inline ::google::protobuf::RepeatedField< bool >*
dense_info_t::mutable_visible() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.dense_info_t.visible)
  return &visible_;
}

// -------------------------------------------------------------------

// change_set_t

// required int64 id = 1;
inline bool change_set_t::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void change_set_t::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void change_set_t::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void change_set_t::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 change_set_t::id() const {
  // @@protoc_insertion_point(field_get:osmpbf.change_set_t.id)
  return id_;
}
inline void change_set_t::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.change_set_t.id)
}

// -------------------------------------------------------------------

// node_t

// required sint64 id = 1;
inline bool node_t::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void node_t::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void node_t::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void node_t::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 node_t::id() const {
  // @@protoc_insertion_point(field_get:osmpbf.node_t.id)
  return id_;
}
inline void node_t::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.node_t.id)
}

// repeated uint32 keys = 2 [packed = true];
inline int node_t::keys_size() const {
  return keys_.size();
}
inline void node_t::clear_keys() {
  keys_.Clear();
}
inline ::google::protobuf::uint32 node_t::keys(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.node_t.keys)
  return keys_.Get(index);
}
inline void node_t::set_keys(int index, ::google::protobuf::uint32 value) {
  keys_.Set(index, value);
  // @@protoc_insertion_point(field_set:osmpbf.node_t.keys)
}
inline void node_t::add_keys(::google::protobuf::uint32 value) {
  keys_.Add(value);
  // @@protoc_insertion_point(field_add:osmpbf.node_t.keys)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
node_t::keys() const {
  // @@protoc_insertion_point(field_list:osmpbf.node_t.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
node_t::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.node_t.keys)
  return &keys_;
}

// repeated uint32 vals = 3 [packed = true];
inline int node_t::vals_size() const {
  return vals_.size();
}
inline void node_t::clear_vals() {
  vals_.Clear();
}
inline ::google::protobuf::uint32 node_t::vals(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.node_t.vals)
  return vals_.Get(index);
}
inline void node_t::set_vals(int index, ::google::protobuf::uint32 value) {
  vals_.Set(index, value);
  // @@protoc_insertion_point(field_set:osmpbf.node_t.vals)
}
inline void node_t::add_vals(::google::protobuf::uint32 value) {
  vals_.Add(value);
  // @@protoc_insertion_point(field_add:osmpbf.node_t.vals)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
node_t::vals() const {
  // @@protoc_insertion_point(field_list:osmpbf.node_t.vals)
  return vals_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
node_t::mutable_vals() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.node_t.vals)
  return &vals_;
}

// optional .osmpbf.info_t info = 4;
inline bool node_t::has_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void node_t::set_has_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void node_t::clear_has_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void node_t::clear_info() {
  if (info_ != NULL) info_->::osmpbf::info_t::Clear();
  clear_has_info();
}
inline const ::osmpbf::info_t& node_t::info() const {
  // @@protoc_insertion_point(field_get:osmpbf.node_t.info)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return info_ != NULL ? *info_ : *default_instance().info_;
#else
  return info_ != NULL ? *info_ : *default_instance_->info_;
#endif
}
inline ::osmpbf::info_t* node_t::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::osmpbf::info_t;
  // @@protoc_insertion_point(field_mutable:osmpbf.node_t.info)
  return info_;
}
inline ::osmpbf::info_t* node_t::release_info() {
  clear_has_info();
  ::osmpbf::info_t* temp = info_;
  info_ = NULL;
  return temp;
}
inline void node_t::set_allocated_info(::osmpbf::info_t* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:osmpbf.node_t.info)
}

// required sint64 lat = 8;
inline bool node_t::has_lat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void node_t::set_has_lat() {
  _has_bits_[0] |= 0x00000010u;
}
inline void node_t::clear_has_lat() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void node_t::clear_lat() {
  lat_ = GOOGLE_LONGLONG(0);
  clear_has_lat();
}
inline ::google::protobuf::int64 node_t::lat() const {
  // @@protoc_insertion_point(field_get:osmpbf.node_t.lat)
  return lat_;
}
inline void node_t::set_lat(::google::protobuf::int64 value) {
  set_has_lat();
  lat_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.node_t.lat)
}

// required sint64 lon = 9;
inline bool node_t::has_lon() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void node_t::set_has_lon() {
  _has_bits_[0] |= 0x00000020u;
}
inline void node_t::clear_has_lon() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void node_t::clear_lon() {
  lon_ = GOOGLE_LONGLONG(0);
  clear_has_lon();
}
inline ::google::protobuf::int64 node_t::lon() const {
  // @@protoc_insertion_point(field_get:osmpbf.node_t.lon)
  return lon_;
}
inline void node_t::set_lon(::google::protobuf::int64 value) {
  set_has_lon();
  lon_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.node_t.lon)
}

// -------------------------------------------------------------------

// dense_nodes_t

// repeated sint64 id = 1 [packed = true];
inline int dense_nodes_t::id_size() const {
  return id_.size();
}
inline void dense_nodes_t::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int64 dense_nodes_t::id(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.dense_nodes_t.id)
  return id_.Get(index);
}
inline void dense_nodes_t::set_id(int index, ::google::protobuf::int64 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:osmpbf.dense_nodes_t.id)
}
inline void dense_nodes_t::add_id(::google::protobuf::int64 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:osmpbf.dense_nodes_t.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
dense_nodes_t::id() const {
  // @@protoc_insertion_point(field_list:osmpbf.dense_nodes_t.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
dense_nodes_t::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.dense_nodes_t.id)
  return &id_;
}

// optional .osmpbf.dense_info_t denseinfo = 5;
inline bool dense_nodes_t::has_denseinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void dense_nodes_t::set_has_denseinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void dense_nodes_t::clear_has_denseinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void dense_nodes_t::clear_denseinfo() {
  if (denseinfo_ != NULL) denseinfo_->::osmpbf::dense_info_t::Clear();
  clear_has_denseinfo();
}
inline const ::osmpbf::dense_info_t& dense_nodes_t::denseinfo() const {
  // @@protoc_insertion_point(field_get:osmpbf.dense_nodes_t.denseinfo)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return denseinfo_ != NULL ? *denseinfo_ : *default_instance().denseinfo_;
#else
  return denseinfo_ != NULL ? *denseinfo_ : *default_instance_->denseinfo_;
#endif
}
inline ::osmpbf::dense_info_t* dense_nodes_t::mutable_denseinfo() {
  set_has_denseinfo();
  if (denseinfo_ == NULL) denseinfo_ = new ::osmpbf::dense_info_t;
  // @@protoc_insertion_point(field_mutable:osmpbf.dense_nodes_t.denseinfo)
  return denseinfo_;
}
inline ::osmpbf::dense_info_t* dense_nodes_t::release_denseinfo() {
  clear_has_denseinfo();
  ::osmpbf::dense_info_t* temp = denseinfo_;
  denseinfo_ = NULL;
  return temp;
}
inline void dense_nodes_t::set_allocated_denseinfo(::osmpbf::dense_info_t* denseinfo) {
  delete denseinfo_;
  denseinfo_ = denseinfo;
  if (denseinfo) {
    set_has_denseinfo();
  } else {
    clear_has_denseinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:osmpbf.dense_nodes_t.denseinfo)
}

// repeated sint64 lat = 8 [packed = true];
inline int dense_nodes_t::lat_size() const {
  return lat_.size();
}
inline void dense_nodes_t::clear_lat() {
  lat_.Clear();
}
inline ::google::protobuf::int64 dense_nodes_t::lat(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.dense_nodes_t.lat)
  return lat_.Get(index);
}
inline void dense_nodes_t::set_lat(int index, ::google::protobuf::int64 value) {
  lat_.Set(index, value);
  // @@protoc_insertion_point(field_set:osmpbf.dense_nodes_t.lat)
}
inline void dense_nodes_t::add_lat(::google::protobuf::int64 value) {
  lat_.Add(value);
  // @@protoc_insertion_point(field_add:osmpbf.dense_nodes_t.lat)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
dense_nodes_t::lat() const {
  // @@protoc_insertion_point(field_list:osmpbf.dense_nodes_t.lat)
  return lat_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
dense_nodes_t::mutable_lat() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.dense_nodes_t.lat)
  return &lat_;
}

// repeated sint64 lon = 9 [packed = true];
inline int dense_nodes_t::lon_size() const {
  return lon_.size();
}
inline void dense_nodes_t::clear_lon() {
  lon_.Clear();
}
inline ::google::protobuf::int64 dense_nodes_t::lon(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.dense_nodes_t.lon)
  return lon_.Get(index);
}
inline void dense_nodes_t::set_lon(int index, ::google::protobuf::int64 value) {
  lon_.Set(index, value);
  // @@protoc_insertion_point(field_set:osmpbf.dense_nodes_t.lon)
}
inline void dense_nodes_t::add_lon(::google::protobuf::int64 value) {
  lon_.Add(value);
  // @@protoc_insertion_point(field_add:osmpbf.dense_nodes_t.lon)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
dense_nodes_t::lon() const {
  // @@protoc_insertion_point(field_list:osmpbf.dense_nodes_t.lon)
  return lon_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
dense_nodes_t::mutable_lon() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.dense_nodes_t.lon)
  return &lon_;
}

// repeated int32 keys_vals = 10 [packed = true];
inline int dense_nodes_t::keys_vals_size() const {
  return keys_vals_.size();
}
inline void dense_nodes_t::clear_keys_vals() {
  keys_vals_.Clear();
}
inline ::google::protobuf::int32 dense_nodes_t::keys_vals(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.dense_nodes_t.keys_vals)
  return keys_vals_.Get(index);
}
inline void dense_nodes_t::set_keys_vals(int index, ::google::protobuf::int32 value) {
  keys_vals_.Set(index, value);
  // @@protoc_insertion_point(field_set:osmpbf.dense_nodes_t.keys_vals)
}
inline void dense_nodes_t::add_keys_vals(::google::protobuf::int32 value) {
  keys_vals_.Add(value);
  // @@protoc_insertion_point(field_add:osmpbf.dense_nodes_t.keys_vals)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
dense_nodes_t::keys_vals() const {
  // @@protoc_insertion_point(field_list:osmpbf.dense_nodes_t.keys_vals)
  return keys_vals_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
dense_nodes_t::mutable_keys_vals() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.dense_nodes_t.keys_vals)
  return &keys_vals_;
}

// -------------------------------------------------------------------

// way_t

// required int64 id = 1;
inline bool way_t::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void way_t::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void way_t::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void way_t::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 way_t::id() const {
  // @@protoc_insertion_point(field_get:osmpbf.way_t.id)
  return id_;
}
inline void way_t::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.way_t.id)
}

// repeated uint32 keys = 2 [packed = true];
inline int way_t::keys_size() const {
  return keys_.size();
}
inline void way_t::clear_keys() {
  keys_.Clear();
}
inline ::google::protobuf::uint32 way_t::keys(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.way_t.keys)
  return keys_.Get(index);
}
inline void way_t::set_keys(int index, ::google::protobuf::uint32 value) {
  keys_.Set(index, value);
  // @@protoc_insertion_point(field_set:osmpbf.way_t.keys)
}
inline void way_t::add_keys(::google::protobuf::uint32 value) {
  keys_.Add(value);
  // @@protoc_insertion_point(field_add:osmpbf.way_t.keys)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
way_t::keys() const {
  // @@protoc_insertion_point(field_list:osmpbf.way_t.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
way_t::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.way_t.keys)
  return &keys_;
}

// repeated uint32 vals = 3 [packed = true];
inline int way_t::vals_size() const {
  return vals_.size();
}
inline void way_t::clear_vals() {
  vals_.Clear();
}
inline ::google::protobuf::uint32 way_t::vals(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.way_t.vals)
  return vals_.Get(index);
}
inline void way_t::set_vals(int index, ::google::protobuf::uint32 value) {
  vals_.Set(index, value);
  // @@protoc_insertion_point(field_set:osmpbf.way_t.vals)
}
inline void way_t::add_vals(::google::protobuf::uint32 value) {
  vals_.Add(value);
  // @@protoc_insertion_point(field_add:osmpbf.way_t.vals)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
way_t::vals() const {
  // @@protoc_insertion_point(field_list:osmpbf.way_t.vals)
  return vals_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
way_t::mutable_vals() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.way_t.vals)
  return &vals_;
}

// optional .osmpbf.info_t info = 4;
inline bool way_t::has_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void way_t::set_has_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void way_t::clear_has_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void way_t::clear_info() {
  if (info_ != NULL) info_->::osmpbf::info_t::Clear();
  clear_has_info();
}
inline const ::osmpbf::info_t& way_t::info() const {
  // @@protoc_insertion_point(field_get:osmpbf.way_t.info)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return info_ != NULL ? *info_ : *default_instance().info_;
#else
  return info_ != NULL ? *info_ : *default_instance_->info_;
#endif
}
inline ::osmpbf::info_t* way_t::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::osmpbf::info_t;
  // @@protoc_insertion_point(field_mutable:osmpbf.way_t.info)
  return info_;
}
inline ::osmpbf::info_t* way_t::release_info() {
  clear_has_info();
  ::osmpbf::info_t* temp = info_;
  info_ = NULL;
  return temp;
}
inline void way_t::set_allocated_info(::osmpbf::info_t* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:osmpbf.way_t.info)
}

// repeated sint64 refs = 8 [packed = true];
inline int way_t::refs_size() const {
  return refs_.size();
}
inline void way_t::clear_refs() {
  refs_.Clear();
}
inline ::google::protobuf::int64 way_t::refs(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.way_t.refs)
  return refs_.Get(index);
}
inline void way_t::set_refs(int index, ::google::protobuf::int64 value) {
  refs_.Set(index, value);
  // @@protoc_insertion_point(field_set:osmpbf.way_t.refs)
}
inline void way_t::add_refs(::google::protobuf::int64 value) {
  refs_.Add(value);
  // @@protoc_insertion_point(field_add:osmpbf.way_t.refs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
way_t::refs() const {
  // @@protoc_insertion_point(field_list:osmpbf.way_t.refs)
  return refs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
way_t::mutable_refs() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.way_t.refs)
  return &refs_;
}

// -------------------------------------------------------------------

// relation_t

// required int64 id = 1;
inline bool relation_t::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void relation_t::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void relation_t::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void relation_t::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 relation_t::id() const {
  // @@protoc_insertion_point(field_get:osmpbf.relation_t.id)
  return id_;
}
inline void relation_t::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:osmpbf.relation_t.id)
}

// repeated uint32 keys = 2 [packed = true];
inline int relation_t::keys_size() const {
  return keys_.size();
}
inline void relation_t::clear_keys() {
  keys_.Clear();
}
inline ::google::protobuf::uint32 relation_t::keys(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.relation_t.keys)
  return keys_.Get(index);
}
inline void relation_t::set_keys(int index, ::google::protobuf::uint32 value) {
  keys_.Set(index, value);
  // @@protoc_insertion_point(field_set:osmpbf.relation_t.keys)
}
inline void relation_t::add_keys(::google::protobuf::uint32 value) {
  keys_.Add(value);
  // @@protoc_insertion_point(field_add:osmpbf.relation_t.keys)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
relation_t::keys() const {
  // @@protoc_insertion_point(field_list:osmpbf.relation_t.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
relation_t::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.relation_t.keys)
  return &keys_;
}

// repeated uint32 vals = 3 [packed = true];
inline int relation_t::vals_size() const {
  return vals_.size();
}
inline void relation_t::clear_vals() {
  vals_.Clear();
}
inline ::google::protobuf::uint32 relation_t::vals(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.relation_t.vals)
  return vals_.Get(index);
}
inline void relation_t::set_vals(int index, ::google::protobuf::uint32 value) {
  vals_.Set(index, value);
  // @@protoc_insertion_point(field_set:osmpbf.relation_t.vals)
}
inline void relation_t::add_vals(::google::protobuf::uint32 value) {
  vals_.Add(value);
  // @@protoc_insertion_point(field_add:osmpbf.relation_t.vals)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
relation_t::vals() const {
  // @@protoc_insertion_point(field_list:osmpbf.relation_t.vals)
  return vals_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
relation_t::mutable_vals() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.relation_t.vals)
  return &vals_;
}

// optional .osmpbf.info_t info = 4;
inline bool relation_t::has_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void relation_t::set_has_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void relation_t::clear_has_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void relation_t::clear_info() {
  if (info_ != NULL) info_->::osmpbf::info_t::Clear();
  clear_has_info();
}
inline const ::osmpbf::info_t& relation_t::info() const {
  // @@protoc_insertion_point(field_get:osmpbf.relation_t.info)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return info_ != NULL ? *info_ : *default_instance().info_;
#else
  return info_ != NULL ? *info_ : *default_instance_->info_;
#endif
}
inline ::osmpbf::info_t* relation_t::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::osmpbf::info_t;
  // @@protoc_insertion_point(field_mutable:osmpbf.relation_t.info)
  return info_;
}
inline ::osmpbf::info_t* relation_t::release_info() {
  clear_has_info();
  ::osmpbf::info_t* temp = info_;
  info_ = NULL;
  return temp;
}
inline void relation_t::set_allocated_info(::osmpbf::info_t* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:osmpbf.relation_t.info)
}

// repeated int32 roles_sid = 8 [packed = true];
inline int relation_t::roles_sid_size() const {
  return roles_sid_.size();
}
inline void relation_t::clear_roles_sid() {
  roles_sid_.Clear();
}
inline ::google::protobuf::int32 relation_t::roles_sid(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.relation_t.roles_sid)
  return roles_sid_.Get(index);
}
inline void relation_t::set_roles_sid(int index, ::google::protobuf::int32 value) {
  roles_sid_.Set(index, value);
  // @@protoc_insertion_point(field_set:osmpbf.relation_t.roles_sid)
}
inline void relation_t::add_roles_sid(::google::protobuf::int32 value) {
  roles_sid_.Add(value);
  // @@protoc_insertion_point(field_add:osmpbf.relation_t.roles_sid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
relation_t::roles_sid() const {
  // @@protoc_insertion_point(field_list:osmpbf.relation_t.roles_sid)
  return roles_sid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
relation_t::mutable_roles_sid() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.relation_t.roles_sid)
  return &roles_sid_;
}

// repeated sint64 memids = 9 [packed = true];
inline int relation_t::memids_size() const {
  return memids_.size();
}
inline void relation_t::clear_memids() {
  memids_.Clear();
}
inline ::google::protobuf::int64 relation_t::memids(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.relation_t.memids)
  return memids_.Get(index);
}
inline void relation_t::set_memids(int index, ::google::protobuf::int64 value) {
  memids_.Set(index, value);
  // @@protoc_insertion_point(field_set:osmpbf.relation_t.memids)
}
inline void relation_t::add_memids(::google::protobuf::int64 value) {
  memids_.Add(value);
  // @@protoc_insertion_point(field_add:osmpbf.relation_t.memids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
relation_t::memids() const {
  // @@protoc_insertion_point(field_list:osmpbf.relation_t.memids)
  return memids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
relation_t::mutable_memids() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.relation_t.memids)
  return &memids_;
}

// repeated .osmpbf.relation_t.member_type_t types = 10 [packed = true];
inline int relation_t::types_size() const {
  return types_.size();
}
inline void relation_t::clear_types() {
  types_.Clear();
}
inline ::osmpbf::relation_t_member_type_t relation_t::types(int index) const {
  // @@protoc_insertion_point(field_get:osmpbf.relation_t.types)
  return static_cast< ::osmpbf::relation_t_member_type_t >(types_.Get(index));
}
inline void relation_t::set_types(int index, ::osmpbf::relation_t_member_type_t value) {
  assert(::osmpbf::relation_t_member_type_t_IsValid(value));
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:osmpbf.relation_t.types)
}
inline void relation_t::add_types(::osmpbf::relation_t_member_type_t value) {
  assert(::osmpbf::relation_t_member_type_t_IsValid(value));
  types_.Add(value);
  // @@protoc_insertion_point(field_add:osmpbf.relation_t.types)
}
inline const ::google::protobuf::RepeatedField<int>&
relation_t::types() const {
  // @@protoc_insertion_point(field_list:osmpbf.relation_t.types)
  return types_;
}
inline ::google::protobuf::RepeatedField<int>*
relation_t::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:osmpbf.relation_t.types)
  return &types_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace osmpbf

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_osmformat_2eproto__INCLUDED
